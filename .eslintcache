[{"C:\\Users\\nicka\\Documents\\Code\\ACA\\411\\axios-react-tutorial\\src\\index.js":"1","C:\\Users\\nicka\\Documents\\Code\\ACA\\411\\axios-react-tutorial\\src\\App.js":"2","C:\\Users\\nicka\\Documents\\Code\\ACA\\411\\axios-react-tutorial\\src\\reportWebVitals.js":"3","C:\\Users\\nicka\\Documents\\Code\\ACA\\411\\axios-react-tutorial\\src\\BeerCard.js":"4"},{"size":500,"mtime":499162500000,"results":"5","hashOfConfig":"6"},{"size":926,"mtime":1611251923237,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":499162500000,"results":"8","hashOfConfig":"6"},{"size":1418,"mtime":1611090195451,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"jdsfyn",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"12"},"C:\\Users\\nicka\\Documents\\Code\\ACA\\411\\axios-react-tutorial\\src\\index.js",[],["20","21"],"C:\\Users\\nicka\\Documents\\Code\\ACA\\411\\axios-react-tutorial\\src\\App.js",[],"C:\\Users\\nicka\\Documents\\Code\\ACA\\411\\axios-react-tutorial\\src\\reportWebVitals.js",[],"C:\\Users\\nicka\\Documents\\Code\\ACA\\411\\axios-react-tutorial\\src\\BeerCard.js",["22"],"import React, { useState } from 'react';\r\n\r\nconst BeerCard = (props) => {\r\n\r\n    const [isActive, setActive] = useState('false');\r\n\r\n    const setABVColor = () => {\r\n        let abvColor;\r\n        if (props.abv < 5.1) {\r\n            abvColor = 'green'\r\n        } else if (props.abv < 7.6) {\r\n            abvColor = \"orange\"\r\n        } else if (props.abv < 12.1) {\r\n            abvColor = \"red\"\r\n        } else {\r\n            abvColor = \"black\"\r\n        }\r\n        return abvColor\r\n    }\r\n\r\n    const handleLike = () => {\r\n        setActive(!isActive);\r\n    };\r\n\r\n    return (\r\n    <li className=\"beerCard\" style={{ listStyle: \"none\", display: \"flex\"}}>\r\n        <img src={props.image_url}></img>\r\n        <div className=\"cardInfo\">\r\n            <h3>\r\n                {props.name}\r\n            </h3>\r\n            <h6 style={{ fontSize: \"16px\" }}>\r\n                First Crafted: {props.first_brewed}\r\n            </h6>\r\n            <h4 style={{ color: setABVColor() }}>\r\n                {props.abv}%\r\n            </h4>\r\n            <h4 style={{ fontSize: '24px' }}>{props.tagline}</h4>\r\n            <p style={{ fontSize: '18px'}}>\r\n                {props.description}\r\n            </p>\r\n            <div>\r\n                <i className={isActive ? \"far fa-heart\" : \"fas fa-heart\"} style={{color: \"red\", cursor: 'pointer'}} onClick={handleLike}></i></div>\r\n        </div>\r\n    </li>\r\n    )\r\n};\r\n\r\nexport default BeerCard;",{"ruleId":"23","replacedBy":"24"},{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","severity":1,"message":"28","line":27,"column":9,"nodeType":"29","endLine":27,"endColumn":36},"no-native-reassign",["30"],"no-negated-in-lhs",["31"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]